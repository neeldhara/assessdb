---
// Hero Section for Blog Posts
// ------------
// Description: A hero section (page header) for the post pages.
// Properties:
// - tags: An array of tags for the post
// - title: The title of the section (usually the title of the post)
// - author: The author of the post
// - publishDate: The publish date of the post

// Components
// - Layout
import Section from '../../../components/ui/Section.astro'
import Row from '../../../components/ui/Row.astro'
import Col from '../../../components/ui/Col.astro'
// - UI
import Badge from '../../../components/ui/Badge.astro'
import Breadcrumbs from '../../../components/ui/Breadcrumbs.astro'

// Content
// - Props
type Props = {
	tags?: any
	title: string
	author?: string
	publishDate?: string
	lang: 'en' | 'es'
}
const { tags, title, author, publishDate, lang = 'en' } = Astro.props

// Const function to format author name
const formatAuthorName = (author: string): string => {
	return author
		.split('-')
		.map((part) => part.charAt(0).toUpperCase() + part.slice(1))
		.join(' ')
}

// - Misc translations
import miscTranslations from '../../../data/json-files/string-translations.json'
// -- Get translations for the current language
const trls = miscTranslations[lang] || miscTranslations['en']
---

<Section id="post-intro" classes="bg-neutral-50 dark:bg-neutral-900">
	<Row>
		<Col span="12" align="center">
			<header class="post-header">
				<Breadcrumbs classes="mb-6" />
				<h1 class="post-header__title">
					{title}
				</h1>
				{
					author ? (
						<p class="page-header__text">
							{trls.blogPostHero.writtenBy},{' '}
							<a href={`${lang === 'en' ? '' : `/${lang}`}/blog/authors/${author}`}>
								{formatAuthorName(author)}
							</a>{' '}
							{publishDate && trls.blogPostHero.dateOn + ' ' + publishDate}
						</p>
					) : (
						publishDate && (
							<p class="page-header__text">
								{trls.blogPostHero.publishedOn}, {publishDate}
							</p>
						)
					)
				}
			</header>
			{
				tags && (
					<div class="post-header__tags">
						{tags.map((tag: string) => (
							<Badge
								name={tag}
								link={`${lang === 'en' ? '' : `/${lang}`}/blog/tags/` + tag}
								classes="capitalize"
							/>
						))}
					</div>
				)
			}
		</Col>
	</Row>
</Section>

<style>
	.page-header {
		@apply mx-auto max-w-4xl;
	}
	.page-header__text {
		@apply text-lg leading-relaxed [&_a]:text-neutral-600 [&_a]:dark:text-neutral-300;
	}
	.post-header__tags {
		@apply mt-6 flex flex-row items-center justify-center gap-2 pb-2;
	}
</style>
