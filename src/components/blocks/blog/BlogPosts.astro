---
// Blog Posts grid Section
// ------------
// Description: A grid of blog posts sorted by date in a 3 column layout.
// Properties:
// - data: An array of blog posts
// - type: The type of collection to display. Can be 'authors' or 'badges'
// - pagination: The pagination object
// Reference: https://wind-ui.com/components/pagination/

// Components
// - Layout
import Section from '../../../components/ui/Section.astro'
import Row from '../../../components/ui/Row.astro'
import Col from '../../../components/ui/Col.astro'
// - UI
import Post from '../../../components/ui/cards/BlogCard.astro'
import BadgeNavigation from '../../../components/ui/collection-navigation/BadgeNavigation.astro'
import AuthorNavigation from '../../ui/collection-navigation/AuthorNavigation.astro'
import Pagination from '../../../components/ui/Pagination.astro'

// Content
// - Props
type Props = {
	data: any
	pagination?: {
		first: string
		prev: string
		next: string
		last: string
		current: string
		length: number
		size: number
		total: number
	}
	type?: 'authors' | 'badges'
	lang?: 'en' | 'es'
}
const { data: allPosts, type = 'badges', pagination, lang = 'en' } = Astro.props

// Sort posts and update slug by removing the language prefix
const sortedPosts = allPosts
	.sort((a: any, b: any) => {
		return new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
	})
	.map((post: any) => {
		post.id = post.id.replace(new RegExp(`^${lang}/`), '') // Remove language prefix from slug
		return { ...post, lang } // Attach lang to the post object
	})
---

<Section>
	<Row>
		<Col span="12">
			{
				type === 'authors' ? (
					<AuthorNavigation lang={lang} />
				) : (
					<BadgeNavigation collection="blog" lang={lang} />
				)
			}
		</Col>
	</Row>
	<Row>
		{
			sortedPosts.map((post: any) => (
				<Col span="4">
					<Post
						link={`${lang === 'en' ? '' : '/es'}/blog/${post.id}`}
						title={post.data.title}
						author={post.data.author}
						date={new Date(post.data.pubDate).toLocaleDateString(lang, {
							year: 'numeric',
							month: 'long',
							day: 'numeric'
						})}
						image={post.data.image}
						badges={post.data.badges}
						lang={lang}
					>
						{post.data.description}
					</Post>
				</Col>
			))
		}
	</Row>
	{
		pagination && (
			<Row classes="pt-16">
				<Col span="12">
					<Pagination
						first={pagination.first}
						prev={pagination.prev}
						next={pagination.next}
						last={pagination.last}
						current={pagination.current}
						length={pagination.length}
						size={pagination.size}
						total={pagination.total}
						lang={lang}
					/>
				</Col>
			</Row>
		)
	}
</Section>
