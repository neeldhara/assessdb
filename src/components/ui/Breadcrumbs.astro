---
// Breadcrumbs
// ------------
// Description: Breadcrumbs consist of a list of links that help a user visualize their location within the hierarchical structure of a website and enable navigation back to any of its "ancestors."
// Properties:
// - classes: optional CSS classes to apply additional styling

// Reference: https://wind-ui.com/components/breadcrumbs/

// Components
// - UI
import { Icon } from 'astro-icon/components'

// Data
import translations from '../../data/json-files/string-translations.json' assert { type: 'json' }
const breadcrumbTranslations = translations as any

// URL Parsing
const url = new URL(Astro.request.url)
const pathname = url.pathname

// Define a list of language codes to exclude from breadcrumb text but keep in the URL
const languages = ['en', 'es']

// Split the pathname into segments, excluding empty segments
const segments = pathname.split('/').filter(Boolean)

// Check if the first segment is a language code; if so, store it in languagePrefix
const languagePrefix = languages.includes(segments[0]) ? segments.shift() : ''

// Function to translate a segment based on the current language
const translateSegment = (segment: string) => {
	if (typeof languagePrefix === 'string' && languagePrefix in breadcrumbTranslations) {
		return breadcrumbTranslations[languagePrefix][segment] || segment.replace(/-/g, ' ')
	}
	return segment.replace(/-/g, ' ')
}

// Define the "home" text based on the current language
let homeText
switch (languagePrefix) {
	case 'es':
		homeText = 'Inicio'
		break
	default:
		homeText = 'Home' // Default to English
}

// Generate the breadcrumbs array, starting with "homeText" and followed by the segments
const breadcrumbs = [homeText, ...segments]

// Content
// - Props
type Props = {
	classes?: string
}
const { classes } = Astro.props
---

<nav aria-label="Breadcrumb" class:list={['breadcrumbs', { [`${classes}`]: classes }]}>
	<ol class="breadcrumbs__list">
		{
			breadcrumbs.map((segment, index) => (
				<li class="breadcrumbs__list-item">
					<a
						href={`/${[languagePrefix, ...segments.slice(0, index)].filter(Boolean).join('/')}`}
						class="breadcrumbs__item-link"
					>
						{index === 0 ? segment : translateSegment(segment)}
					</a>
					{index < breadcrumbs.length - 1 && (
						<Icon name="chevron-left" class="breadcrumbs__item-icon" />
					)}
				</li>
			))
		}
	</ol>
</nav>

<style>
	.breadcrumbs {
		@apply inline-flex rounded border border-neutral-200 bg-white/50 px-4 py-2 text-sm text-neutral-500 dark:border-neutral-800 dark:bg-neutral-800/50 dark:text-neutral-300;
	}
	.breadcrumbs__list {
		@apply inline-flex items-center;
	}
	.breadcrumbs__list-item {
		@apply flex items-center gap-2 [&:not(:first-child):not(:last-child)]:hidden [&:not(:first-child):not(:last-child)]:md:flex;
	}
	.breadcrumbs__item-link {
		@apply flex items-center gap-1 truncate whitespace-nowrap capitalize text-neutral-700 transition-colors last:pointer-events-none last:text-neutral-400 hover:text-primary-500 dark:text-neutral-50;
	}
	.breadcrumbs__item-icon {
		@apply h-4 w-4 flex-none text-neutral-700 transition-transform md:rotate-180 dark:text-neutral-50;
	}
</style>
